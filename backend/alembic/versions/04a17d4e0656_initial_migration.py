"""Initial migration

Revision ID: 04a17d4e0656
Revises: 
Create Date: 2025-06-01 09:26:40.450220

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "04a17d4e0656"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "search_locations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("label", sa.String(), nullable=True),
        sa.Column("city", sa.String(), nullable=False),
        sa.Column("state", sa.String(), nullable=True),
        sa.Column("country", sa.String(), nullable=False),
        sa.Column("postal_code", sa.String(), nullable=True),
        sa.Column("latitude", sa.Float(), nullable=False),
        sa.Column("longitude", sa.Float(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_search_locations_id"), "search_locations", ["id"], unique=False
    )
    op.create_table(
        "weather_forecast",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("location_id", sa.Integer(), nullable=False),
        sa.Column("weather_date", sa.DateTime(), nullable=False),
        sa.Column("temp_min_c", sa.Float(), nullable=True),
        sa.Column("temp_max_c", sa.Float(), nullable=True),
        sa.Column("condition", sa.String(), nullable=True),
        sa.Column("icon", sa.String(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["location_id"], ["search_locations.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_weather_forecast_id"), "weather_forecast", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_weather_forecast_location_id"),
        "weather_forecast",
        ["location_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_weather_forecast_weather_date"),
        "weather_forecast",
        ["weather_date"],
        unique=False,
    )
    op.create_table(
        "weather_history",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("location_id", sa.Integer(), nullable=False),
        sa.Column("weather_date", sa.DateTime(), nullable=False),
        sa.Column("temp_c", sa.Float(), nullable=False),
        sa.Column("temp_f", sa.Float(), nullable=False),
        sa.Column("humidity", sa.Float(), nullable=True),
        sa.Column("wind_speed", sa.Float(), nullable=True),
        sa.Column("wind_deg", sa.Float(), nullable=True),
        sa.Column("wind_gust", sa.Float(), nullable=True),
        sa.Column("condition", sa.String(), nullable=False),
        sa.Column("condition_desc", sa.String(), nullable=True),
        sa.Column("icon", sa.String(), nullable=True),
        sa.Column("sunrise", sa.DateTime(), nullable=True),
        sa.Column("sunset", sa.DateTime(), nullable=True),
        sa.Column("pressure", sa.Float(), nullable=True),
        sa.Column("visibility", sa.Float(), nullable=True),
        sa.Column("precipitation", sa.Float(), nullable=True),
        sa.Column("precipitation_type", sa.String(), nullable=True),
        sa.Column("uvi", sa.Float(), nullable=True),
        sa.Column("weather_code", sa.Integer(), nullable=True),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("api_source", sa.String(), nullable=True),
        sa.Column("raw_response", sa.JSON(), nullable=True),
        sa.Column("tip", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["location_id"], ["search_locations.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_weather_history_id"), "weather_history", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_weather_history_location_id"),
        "weather_history",
        ["location_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_weather_history_weather_date"),
        "weather_history",
        ["weather_date"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_weather_history_weather_date"), table_name="weather_history")
    op.drop_index(op.f("ix_weather_history_location_id"), table_name="weather_history")
    op.drop_index(op.f("ix_weather_history_id"), table_name="weather_history")
    op.drop_table("weather_history")
    op.drop_index(
        op.f("ix_weather_forecast_weather_date"), table_name="weather_forecast"
    )
    op.drop_index(
        op.f("ix_weather_forecast_location_id"), table_name="weather_forecast"
    )
    op.drop_index(op.f("ix_weather_forecast_id"), table_name="weather_forecast")
    op.drop_table("weather_forecast")
    op.drop_index(op.f("ix_search_locations_id"), table_name="search_locations")
    op.drop_table("search_locations")
    # ### end Alembic commands ###
